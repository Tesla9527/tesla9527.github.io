---
layout:     post
title:      "软件测试面试题"
subtitle:   ""
date:       2017-02-22
author:     "Tesla9527"
header-img: "img/home-bg-art.jpg"
catalog:    false
tags:
    - 面试
---
1、什么是兼容性测试？兼容性测试侧重哪些方面？

	参考答案：
	1、兼容测试主要是检查软件在不同的硬件平台、软件平台上是否可以正常的运行，即是通常说的软件的可移植性。
	兼容的类型，如果细分的话，有平台的兼容，网络兼容，数据库兼容，以及数据格式的兼容。
	2、兼容测试的重点是，对兼容环境的分析。通常，是在运行软件的环境不是很确定的情况下，才需要做兼容。
	根据软件运行的需要，或者根据需求文档，一般都能够得出用户会在什么环境下使用该软件，
	把这些环境整理成表单，就得出做兼容测试的兼容环境了。
	兼容和配置测试的区别在于，做配置测试通常不是Clean OS下做测试，而兼容测试多是在Clean OS的环境下做的。

2、我现在有个程序，发现在Windows上运行得很慢，怎么判别是程序存在问题还是软硬件系统存在问题？

	参考答案：
	1、检查系统是否有中毒的特征；
	2、检查软件/硬件的配置是否符合软件的推荐标准；
	3、确认当前的系统是否是独立，即没有对外提供什么消耗CPU资源的服务；
	4、如果是C/S或者B/S结构的软件，需要检查是不是因为与服务器的连接有问题，或者访问有问题造成的；
	5、在系统没有任何负载的情况下，查看性能监视器，确认应用程序对CPU/内存的访问情况。
	
3、测试的策略有哪些？

	参考答案：
	黑盒/白盒，静态/动态，手工/自动，冒烟测试，回归测试，公测（Beta测试的策略）
	
4、正交表测试用例设计方法的特点是什么？

	参考答案：
	用最少的实验覆盖最多的操作，测试用例设计很少，效率高，但是很复杂；
	对于基本的验证功能，以及二次集成引起的缺陷，一般都能找出来；但是更深的缺陷，更复杂的缺陷，还是无能为力的；
	具体的环境下，正交表一般都很难做的。大多数，只在系统测试的时候使用此方法。

5、描述使用bugzilla缺陷管理工具对软件缺陷（BUG）跟踪的管理的流程？

	参考答案：
	就是Bugzilla的状态转换图。
	
6、你觉得bugzilla在使用的过程中，有什么问题？

	参考答案：
	界面不稳定；
	根据需要配置它的不同的部分，过程很烦琐。
	流程控制上，安全性不好界定，很容易对他人的Bug进行误操作；
	没有综合的评分指标，不好确认修复的优先级别。
	
7、描述测试用例设计的完整过程？

	参考答案：
	需求分析 + 需求变更的维护工作；
	根据需求 得出测试需求；
	设计测试方案，评审测试方案；
	方案评审通过后，设计测试用例，再对测试用例进行评审；
	
8、TestDirector有些什么功能，如何对软件测试过程进行管理？

	参考答案：
	1、需求管理。定义测试范围，定义需求树，描述需求树的功能点
	2、测试计划。定义测试目标和测试策略。分解应用程序，建立测试计划树。确定每个功能点的测试方法。将每个功能点连接到需求上，使测试计划覆盖全部的测试需求。描述手工测试的测试步骤，指明需要进行自动测试的功能点
	3、测试执行。定义测试集合。为每个测试人员制定测试任务和测试日程安排。运行自动测试。
	4、缺陷跟踪。记录缺陷，查看新增缺陷，并确定哪些是需要修正的，相关技术人员修改缺陷，回归测试。分析缺陷统计图表，分析应用程序的开发质量。

9、你所熟悉的软件测试类型都有哪些？请试着分别比较这些不同的测试类型的区别与联系（如功能测试、性能测试……）？

	参考答案：
	Compatibility Testing（兼容性测试），也称“Configuration testing（配置测试）”，
	测试软件是否和系统的其它与之交互的元素之间兼容，如：浏览器、操作系统、硬件等。
	验证测试对象在不同的软件和硬件配置中的运行情况。

	Functional testing (功能测试)，也称为behavioral testing（行为测试），
	根据产品特征、操作描述和用户方案，测试一个产品的特性和可操作行为以确定它们满足设计需求。
	本地化软件的功能测试，用于验证应用程序或网站对目标用户能正确工作。
	使用适当的平台、浏览器和测试脚本，以保证目标用户的体验将足够好，就像应用程序是专门为该市场开发的一样。
	
	Performance testing（性能测试），评价一个产品或组件与性能需求是否符合的测试。
	包括负载测试、强度测试、数据库容量测试、基准测试等类型。

10、Beta测试与Alpha测试有什么区别？

	参考答案：
	Beta testing(β测试),测试是软件的多个用户在一个或多个用户的实际使用环境下进行的测试。开发者通常不在测试现场
	Alpha testing (α测试),是由一个用户在开发环境下进行的测试，也可以是公司内部的用户在模拟实际操作环境下进行的受控测试

11、软件的评审一般由哪些人参加？其目的是什么？	

	参考答案：
	在正式的会议上将软件项目的成果（包括各阶段的文档、产生的代码等）提交给用户、客户或有关部门人员对软件产品进行评审和批准。
	其目的是找出可能影响软件产品质量、开发过程、维护工作的适用性和环境方面的设计缺陷，并采取补救措施，以及找出在性能、安全性和经济方面的可能的改进。 
	人员：用户、客户或有关部门开发人员，测试人员，需求分析师都可以，就看处于评审那个阶段 
	
12、测试活动中，如果发现需求文档不完善或者不准确，怎么处理？	

	参考答案：
	测试需求分析 发现需求文档不完善或者不准确，应该立即和相关人员进行协调交流。
	
13、阶段评审与项目评审有什么区别？	

	参考答案：
	阶段评审 对项目各阶段评审：对阶段成果和工作
	项目评审 对项目总体评审：对工作和产品
	
14、阐述工作版本的定义？	

	参考答案：
	构造号： BUILD

15、什么是桩模块？什么是驱动模块？

	参考答案：
	桩模块：被测模块调用模块
	驱动模块 调用被测模块
	
16、什么是扇入？什么是扇出？	

	参考答案：
	扇入：被调次数，扇出：调其它模块数目

17、你认为做好测试计划工作的关键是什么？

	参考答案：
	软件测试计划就是在软件测试工作正式实施之前明确测试的对象，并且通过对资源、时间、风险、测试范围和预算等方面的综合分析和规划，保证有效的实施软件测试；
	做好测试计划工作的关键 ：目的，管理，规范
	1. 明确测试的目标，增强测试计划的实用性
	编写软件测试计划得重要目的就是使测试过程能够发现更多的软件缺陷，因此软件测试计划的价值取决于它对帮助管理测试项目，并且找出软件潜在的缺陷。因此，软件测试计划中的测试范围必须高度覆盖功能需求，测试方法必须切实可行，测试工具并且具有较高的实用性，便于使用，生成的测试结果直观、准确
	2．坚持“5W”规则，明确内容与过程
	“5W”规则指的是“What（做什么）”、“Why（为什么做）”、“When（何时做）”、“Where（在哪里）”、“How（如何做）”。利用“5W”规则创建软件测试计划，可以帮助测试团队理解测试的目的（Why），明确测试的范围和内容（What），确定测试的开始和结束日期（When），指出测试的方法和工具（How），给出测试文档和软件的存放位置（Where）。
	3．采用评审和更新机制，保证测试计划满足实际需求
	测试计划写作完成后，如果没有经过评审，直接发送给测试团队，测试计划内容的可能不准确或遗漏测试内容，或者软件需求变更引起测试范围的增减，而测试计划的内容没有及时更新，误导测试执行人员。
	4. 分别创建测试计划与测试详细规格、测试用例
	应把详细的测试技术指标包含到独立创建的测试详细规格文档，把用于指导测试小组执行测试过程的测试用例放到独立创建的测试用例文档或测试用例管理数据库中。测试计划和测试详细规格、测试用例之间是战略和战术的关系，测试计划主要从宏观上规划测试活动的范围、方法和资源配置，而测试详细规格、测试用例是完成测试任务的具体战术。
	
18、你认为做好测试用例工作的关键是什么？	

	参考答案：
	需求和设计文档的理解程度，对系统的熟悉程度
	
19、简述一下缺陷的生命周期？	

	参考答案：
	提交->确认->分配->修复->验证->关闭
	
20、软件配置管理工作开展的情况和认识？	

	参考答案：
	软件配置管理贯穿于软件开发、测试活动的始终，覆盖了开发、测试活动的各个环节，它的重要作用之一就是要全面的管理保存各个配置项，监控各配置项的状态，并向项目经理及相关的人员报告，从而实现对软件过程的控制。
	软件测试配置管理包括4个最基本的活动：
	配置项标识
	配置项控制
	配置项状态报告
	配置审计
	软件配置管理通常借助工具来辅助，主要有MS SourceSafe、Rational ClearCase等
	
21、你觉得软件测试通过的标准应该是什么样的？	

	参考答案：
	缺陷密度值达到客户的要求

22、引入测试管理的含义？ 

	参考答案：
	风险分析，进度控制、角色分配、质量控制
	
23、一套完整的测试应该由哪些阶段组成？	

	参考答案：
	测试计划、测试设计与开发、测试实施、测试评审与测试结论
	
24、简述集成测试与系统测试关系？	

	参考答案：
	集成测试的主要依据概要设计说明书，系统测试的主要依据是需求设计说明书。集成测试是系统模块的测试，系统测试是对整个系统的测试，包括相关的软硬件平台、网络以及相关外设的测试









