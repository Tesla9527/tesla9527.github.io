---
layout:     post
title:      "软件测试面试题"
subtitle:   ""
date:       2017-02-22
author:     "Tesla9527"
header-img: "img/home-bg-art.jpg"
catalog:    false
tags:
    - 面试
---
1、什么是兼容性测试？兼容性测试侧重哪些方面？

	参考答案：
	1、兼容测试主要是检查软件在不同的硬件平台、软件平台上是否可以正常的运行，即是通常说的软件的可移植性。
	兼容的类型，如果细分的话，有平台的兼容，网络兼容，数据库兼容，以及数据格式的兼容。
	2、兼容测试的重点是，对兼容环境的分析。通常，是在运行软件的环境不是很确定的情况下，才需要做兼容。
	根据软件运行的需要，或者根据需求文档，一般都能够得出用户会在什么环境下使用该软件，
	把这些环境整理成表单，就得出做兼容测试的兼容环境了。
	兼容和配置测试的区别在于，做配置测试通常不是Clean OS下做测试，而兼容测试多是在Clean OS的环境下做的。

2、我现在有个程序，发现在Windows上运行得很慢，怎么判别是程序存在问题还是软硬件系统存在问题？

	参考答案：
	1、检查系统是否有中毒的特征；
	2、检查软件/硬件的配置是否符合软件的推荐标准；
	3、确认当前的系统是否是独立，即没有对外提供什么消耗CPU资源的服务；
	4、如果是C/S或者B/S结构的软件，需要检查是不是因为与服务器的连接有问题，或者访问有问题造成的；
	5、在系统没有任何负载的情况下，查看性能监视器，确认应用程序对CPU/内存的访问情况。
	
3、测试的策略有哪些？

	参考答案：
	黑盒/白盒，静态/动态，手工/自动，冒烟测试，回归测试，公测（Beta测试的策略）
	
4、正交表测试用例设计方法的特点是什么？

	参考答案：
	用最少的实验覆盖最多的操作，测试用例设计很少，效率高，但是很复杂；
	对于基本的验证功能，以及二次集成引起的缺陷，一般都能找出来；但是更深的缺陷，更复杂的缺陷，还是无能为力的；
	具体的环境下，正交表一般都很难做的。大多数，只在系统测试的时候使用此方法。

5、描述使用bugzilla缺陷管理工具对软件缺陷（BUG）跟踪的管理的流程？

	参考答案：
	就是Bugzilla的状态转换图。
	
6、你觉得bugzilla在使用的过程中，有什么问题？

	参考答案：
	界面不稳定；
	根据需要配置它的不同的部分，过程很烦琐。
	流程控制上，安全性不好界定，很容易对他人的Bug进行误操作；
	没有综合的评分指标，不好确认修复的优先级别。
	
7、描述测试用例设计的完整过程？

	参考答案：
	需求分析 + 需求变更的维护工作；
	根据需求 得出测试需求；
	设计测试方案，评审测试方案；
	方案评审通过后，设计测试用例，再对测试用例进行评审；
	
8、TestDirector有些什么功能，如何对软件测试过程进行管理？

	参考答案：
	1、需求管理。定义测试范围，定义需求树，描述需求树的功能点
	2、测试计划。定义测试目标和测试策略。分解应用程序，建立测试计划树。确定每个功能点的测试方法。将每个功能点连接到需求上，使测试计划覆盖全部的测试需求。描述手工测试的测试步骤，指明需要进行自动测试的功能点
	3、测试执行。定义测试集合。为每个测试人员制定测试任务和测试日程安排。运行自动测试。
	4、缺陷跟踪。记录缺陷，查看新增缺陷，并确定哪些是需要修正的，相关技术人员修改缺陷，回归测试。分析缺陷统计图表，分析应用程序的开发质量。

9、你所熟悉的软件测试类型都有哪些？请试着分别比较这些不同的测试类型的区别与联系（如功能测试、性能测试……）？

	参考答案：
	Compatibility Testing（兼容性测试），也称“Configuration testing（配置测试）”，
	测试软件是否和系统的其它与之交互的元素之间兼容，如：浏览器、操作系统、硬件等。
	验证测试对象在不同的软件和硬件配置中的运行情况。

	Functional testing (功能测试)，也称为behavioral testing（行为测试），
	根据产品特征、操作描述和用户方案，测试一个产品的特性和可操作行为以确定它们满足设计需求。
	本地化软件的功能测试，用于验证应用程序或网站对目标用户能正确工作。
	使用适当的平台、浏览器和测试脚本，以保证目标用户的体验将足够好，就像应用程序是专门为该市场开发的一样。
	
	Performance testing（性能测试），评价一个产品或组件与性能需求是否符合的测试。
	包括负载测试、强度测试、数据库容量测试、基准测试等类型。

10、Beta测试与Alpha测试有什么区别？

	参考答案：
	Beta testing(β测试),测试是软件的多个用户在一个或多个用户的实际使用环境下进行的测试。开发者通常不在测试现场
	Alpha testing (α测试),是由一个用户在开发环境下进行的测试，也可以是公司内部的用户在模拟实际操作环境下进行的受控测试

11、软件的评审一般由哪些人参加？其目的是什么？	

	参考答案：
	在正式的会议上将软件项目的成果（包括各阶段的文档、产生的代码等）提交给用户、客户或有关部门人员对软件产品进行评审和批准。
	其目的是找出可能影响软件产品质量、开发过程、维护工作的适用性和环境方面的设计缺陷，并采取补救措施，以及找出在性能、安全性和经济方面的可能的改进。 
	人员：用户、客户或有关部门开发人员，测试人员，需求分析师都可以，就看处于评审那个阶段 
	
12、测试活动中，如果发现需求文档不完善或者不准确，怎么处理？	

	参考答案：
	测试需求分析 发现需求文档不完善或者不准确，应该立即和相关人员进行协调交流。
	
13、阶段评审与项目评审有什么区别？	

	参考答案：
	阶段评审 对项目各阶段评审：对阶段成果和工作
	项目评审 对项目总体评审：对工作和产品
	
14、阐述工作版本的定义？	

	参考答案：
	构造号： BUILD

15、什么是桩模块？什么是驱动模块？

	参考答案：
	桩模块：被测模块调用模块
	驱动模块 调用被测模块
	
16、什么是扇入？什么是扇出？	

	参考答案：
	扇入：被调次数，扇出：调其它模块数目

17、你认为做好测试计划工作的关键是什么？

	参考答案：
	软件测试计划就是在软件测试工作正式实施之前明确测试的对象，并且通过对资源、时间、风险、测试范围和预算等方面的综合分析和规划，保证有效的实施软件测试；
	做好测试计划工作的关键 ：目的，管理，规范
	1. 明确测试的目标，增强测试计划的实用性
	编写软件测试计划得重要目的就是使测试过程能够发现更多的软件缺陷，因此软件测试计划的价值取决于它对帮助管理测试项目，并且找出软件潜在的缺陷。因此，软件测试计划中的测试范围必须高度覆盖功能需求，测试方法必须切实可行，测试工具并且具有较高的实用性，便于使用，生成的测试结果直观、准确
	2．坚持“5W”规则，明确内容与过程
	“5W”规则指的是“What（做什么）”、“Why（为什么做）”、“When（何时做）”、“Where（在哪里）”、“How（如何做）”。利用“5W”规则创建软件测试计划，可以帮助测试团队理解测试的目的（Why），明确测试的范围和内容（What），确定测试的开始和结束日期（When），指出测试的方法和工具（How），给出测试文档和软件的存放位置（Where）。
	3．采用评审和更新机制，保证测试计划满足实际需求
	测试计划写作完成后，如果没有经过评审，直接发送给测试团队，测试计划内容的可能不准确或遗漏测试内容，或者软件需求变更引起测试范围的增减，而测试计划的内容没有及时更新，误导测试执行人员。
	4. 分别创建测试计划与测试详细规格、测试用例
	应把详细的测试技术指标包含到独立创建的测试详细规格文档，把用于指导测试小组执行测试过程的测试用例放到独立创建的测试用例文档或测试用例管理数据库中。测试计划和测试详细规格、测试用例之间是战略和战术的关系，测试计划主要从宏观上规划测试活动的范围、方法和资源配置，而测试详细规格、测试用例是完成测试任务的具体战术。
	
18、你认为做好测试用例工作的关键是什么？	

	参考答案：
	需求和设计文档的理解程度，对系统的熟悉程度
	
19、简述一下缺陷的生命周期？	

	参考答案：
	提交->确认->分配->修复->验证->关闭
	
20、软件配置管理工作开展的情况和认识？	

	参考答案：
	软件配置管理贯穿于软件开发、测试活动的始终，覆盖了开发、测试活动的各个环节，它的重要作用之一就是要全面的管理保存各个配置项，监控各配置项的状态，并向项目经理及相关的人员报告，从而实现对软件过程的控制。
	软件测试配置管理包括4个最基本的活动：
	配置项标识
	配置项控制
	配置项状态报告
	配置审计
	软件配置管理通常借助工具来辅助，主要有MS SourceSafe、Rational ClearCase等
	
21、你觉得软件测试通过的标准应该是什么样的？	

	参考答案：
	缺陷密度值达到客户的要求

22、引入测试管理的含义？ 

	参考答案：
	风险分析，进度控制、角色分配、质量控制
	
23、一套完整的测试应该由哪些阶段组成？	

	参考答案：
	测试计划、测试设计与开发、测试实施、测试评审与测试结论
	
24、简述集成测试与系统测试关系？	

	参考答案：
	集成测试的主要依据概要设计说明书，系统测试的主要依据是需求设计说明书。集成测试是系统模块的测试，系统测试是对整个系统的测试，包括相关的软硬件平台、网络以及相关外设的测试
	
25、软件测试的文档测试应当贯穿于软件生命周期的全过程，其中用户文档是文档测试的重点。那么软件系统的用户文档包括哪些？

	参考答案：
	用户手册；安装和设置指导；联机帮助；指南、向导；样例、示例和模板；授权/注册登记表；最终用户许可协议
	
26、软件系统中除用户文档之外，文档测试还应该关注哪些文档？	

	参考答案：
	开发文档：软件需求说明书，数据库设计说明书，概要设计说明书，详细设计说明书，可行性研究报告
	管理文档：项目开发计划，测试计划，测试报告，开发进度月报，开发总结报告

27、简述软件系统中用户文档的测试要点？

	参考答案：
	1、读者群。文档面向的读者定位要明确。对于初级用户、中级用户以及高级用户应该有不同的定位
	2、术语。文档中用到的术语要适用与定位的读者群，用法一致，标准定义与业界规范相吻合。
	3、正确性。测试中需检查所有信息是否真实正确，查找由于过期产品说明书和销售人员夸大事实而导致的错误。检查所有的目录、索引和章节引用是否已更新，尝试链接是否准确，产品支持电话、地址和邮政编码是否正确。
	4、完整性。对照软件界面检查是否有重要的分支没有描述到，甚至是否有整个大模块没有描述到。
	5、一致性。按照文档描述的操作执行后，检查软件返回的结果是否与文档描述的相同。
	6、易用性。对关键步骤以粗体或背景色给用户以提示，合理的页面布局、适量的图表都可以给用户更高的易用性。需要注意的是文档要有助于用户排除错误。不但描述正确操作，也要描述错误处理办法。文档对于用户看到的错误信息应当有更详细的文档解释。
	7、图表与界面截图。检查所有图表与界面截图是否与发行版本相同。
	8、样例与示例。像用户一样载入和使用样例。如果是一段程序，就输入数据并执行它。以每一个模块制作文件，确认它们的正确性。
	9、语言。不出现错别字，不要出现有二义性的说法。特别要注意的是屏幕截图或绘制图形中的文字。
	10、印刷与包装。检查印刷质量；手册厚度与开本是否合适；包装盒的大小是否合适；有没有零碎易丢失的小部件等等。
	
28、文档测试主要包含什么内容？	

	参考答案：
	在国内软件开发管理中，文档管理几乎是最弱的一项，因而在测试工作中特别容易忽略文档测试也就不足为奇了。要想给用户提供完整的产品，文档测试是必不可少的。文档测试一般注重下面几个方面：
	文档的完整性：主要是测试文档内容的全面性与完整性，从总体上把握文档的质量。例如用户手册应该包括软件的所有功能模块。
	描述与软件实际情况的一致性：主要测试软件文档与软件实际的一致程度。例如用户手册基本完整后，我们还要注意用户手册与实际功能描述是否一致。因为文档往往跟不上软件版本的更新速度。
	易理解性：主要是检查文档对关键、重要的操作有无图文说明，文字、图表是否易于理解。对于关键、重要的操作仅仅只有文字说明肯定是不够的，应该附有图表使说明更为直观和明了。
	文档中提供操作的实例：这项检查内容主要针对用户手册。对主要功能和关键操作提供的应用实例是否丰富，提供的实例描述是否详细。只有简单的图文说明，而无实例的用户手册看起来就像是软件界面的简单拷贝，对于用户来说，实际上没有什么帮助。
	印刷与包装质量：主要是检查软件文档的商品化程度。有些用户手册是简单打印、装订而成，过于粗糙，不易于用户保存。优秀的文档例如用户手册和技术白皮书，应提供商品化包装，并且印刷精美。
	
29、功能测试用例需要详细到什么程度才是合格的？	

	参考答案：
	这个问题也是测试工程师经常问的问题。有人主张测试用例详细到每个步骤执行什么都要写出来，目的是即使一个不了解系统的新手都可以按照测试用例来执行工作。主张这类写法的人还可以举出例子：欧美、日本等软件外包文档都是这样做的。
	另外一种观点就是主张写的粗些，类似于编写测试大纲。主张这种观点的人是因为软件开发需求管理不规范，变动十分频繁，因而不能按照欧美的高标准来编写测试用例。这样的测试用例容易维护，可以让测试执行人员有更大的发挥空间。
	实际上，软件测试用例的详细程度首先要以覆盖到测试点为基本要求。举个例子：“用户登陆系统”的测试用例可以不写出具体的执行数据，但是至少要写出五种以上情况（），如果只用一句话覆盖了这个功能是不合格的测试用例。覆盖功能点不是指列出功能点，而是要写出功能点的各个方面（如果组合情况较多时可以采用等价划分）。
	另一个影响测试用例的就是组织的开发能力和测试对象特点。如果开发力量比较落后，编写较详细的测试用例是不现实的，因为根本没有那么大的资源投入，当然这种情况很随着团队的发展而逐渐有所改善。测试对象特点重点是指测试对象在进度、成本等方面的要求，如果进度较紧张的情况下，是根本没有时间写出高质量的测试用例的，甚至有些时候测试工作只是一种辅助工作，因而不编写测试用例。
	因此，测试用例的编写要根据测试对象特点、团队的执行能力等各个方面综合起来决定编写策略。最后要注意的是测试人员一定不能抱怨，力争在不断提高测试用例编写水平的同时，不断地提高自身能力。
	
30、配置和兼容性测试的区别是什么？	

	参考答案：
	配置测试的目的是保证软件在其相关的硬件上能够正常运行，而兼容性测试主要是测试软件能否与不同的软件正确协作。
	配置测试的核心内容就是使用各种硬件来测试软件的运行情况，一般包括：
	1、软件在不同的主机上的运行情况，例如Dell和Apple；
	2、软件在不同的组件上的运行情况，例如开发的拨号程序要测试在不同厂商生产的Modem上的运行情况；
	3、不同的外设；
	4、不同的接口；
	5、不同的可选项，例如不同的内存大小；
	兼容性测试的核心内容：
	1、测试软件是否能在不同的操作系统平台上兼容；
	2、测试软件是否能在同一操作系统平台的不同版本上兼容；
	3、软件本身能否向前或者向后兼容；
	4、测试软件能否与其它相关的软件兼容；
	5、数据兼容性测试，主要是指数据能否共享；
	配置和兼容性测试通称对开发系统类软件比较重要，例如驱动程序、操作系统、数据库管理系统等。具体进行时仍然按照测试用例来执行













